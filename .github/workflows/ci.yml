name: Continuous Integration

on:
  push:
    branches:
      - main  # Change this to your default branch if necessary
  pull_request:
    branches:
      - main  # Run tests on pull requests targeting the main branch

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'  # Specify your Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Adjust if you have specific requirements

      - name: Run tests
        run: |
          pytest  # Run your test cases using pytest
# name: CI-CD pipeline 

# on:
#   push:
#     branches:
#       - main  # Change this to your default branch if necessary
#   pull_request:
#     branches:
#       - main  # Run tests on pull requests targeting the main branch

# jobs: 
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.10'

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Run tests
#         run: |
#           pytest tests/  # Run your test cases using pytest

#       - name: Deploy to VPS  # Deploy to VPS using SSH
#         if: success()  # Only deploy if tests pass
#         env:
#           SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Store your SSH private key as a GitHub secret
#           VPS_USER: ${{ secrets.VPS_USER }}  # VPS username (e.g., 'root')
#           VPS_HOST: ${{ secrets.VPS_HOST }}  # VPS IP address or domain
#         run: |
#           # Install SSH client
#           sudo apt-get install -y openssh-client
          
#           # Set up SSH private key
#           mkdir -p ~/.ssh
#           echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
#           chmod 600 ~/.ssh/id_rsa
          
#           # SSH into your server and deploy
#           ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST << 'EOF'
#             # Navigate to the app directory
#             cd /path/to/your/app/directory || exit
#             git pull origin main  # Pull the latest code from the repository
#             # Set up the environment (optional)
#             python -m venv venv
#             source venv/bin/activate
#             pip install -r requirements.txt
#             # Run the app or restart the service
#             nohup streamlit run app.py &  # Or your app's start command
#           EOF
